{"version":3,"sources":["Count.js","App.js","index.js"],"names":["Count","count","addOne","add100","increase","type","onClick","className","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACnB,6BACE,qCAEG,IACCH,GAEJ,4BACEI,KAAK,SACLC,QAASJ,EACTK,UAAU,UAHZ,WAOA,4BACEF,KAAK,SACLC,QAASH,EACTI,UAAU,UAHZ,WAOA,4BACEF,KAAK,SACLC,QAASF,EACTG,UAAU,UAHZ,cCiBWC,G,kNApCbC,MAAQ,CACNR,MAAO,G,EAGTC,OAAS,WACP,EAAKQ,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,O,EAIzBE,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,S,EAIzBG,SAAW,WACL,EAAKK,MAAMR,MAAQ,IAAM,GAC3B,EAAKE,SAGP,EAAKD,U,uDAIL,OACE,kBAAC,EAAD,CACED,MAAOU,KAAKF,MAAMR,MAClBC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,e,GA/BLQ,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3b5b632c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Count = ({ count, addOne, add100, increase }) => (\n  <div>\n    <h1>\n      Count:\n      {' '}\n      { count }\n    </h1>\n    <button\n      type=\"button\"\n      onClick={addOne}\n      className=\"button\"\n    >\n      Add One\n    </button>\n    <button\n      type=\"button\"\n      onClick={add100}\n      className=\"button\"\n    >\n      Add 100\n    </button>\n    <button\n      type=\"button\"\n      onClick={increase}\n      className=\"button\"\n    >\n      Increase\n    </button>\n  </div>\n);\n\nCount.propTypes = {\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n  count: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Count } from './Count';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => {\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n\n    this.addOne();\n  };\n\n  render() {\n    return (\n      <Count\n        count={this.state.count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}